package pages

import "github.com/xhuliodo/todos_hat_stack/views/layout"
import "github.com/xhuliodo/todos_hat_stack/internal"
import "github.com/xhuliodo/todos_hat_stack/views/components"

templ SignUp(loggedIn bool, user internal.User, f internal.SignUpForm) {
  @layout.Base(loggedIn, user) {
    <div class="flex flex-col justify-center items-center h-screen" >
      <h1 class="text-3xl font-bold mb-4">Sign Up</h1>
      <form class="w-1/3">
        <div class="mb-4">
          <label for="name" class="block text-gray-700 text-sm font-bold mb-2">Name</label>
          <input name="name" value={f.Name} class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
          if f.NameError != "" {
            @components.FormMessage(f.HasError, "", f.NameError)
          }
        </div>
        <div class="mb-4">
          <label for="email" class="block text-gray-700 text-sm font-bold mb-2">Email</label>
          <input type="email" value={f.Email} name="email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
          if f.EmailError != "" {
            @components.FormMessage(f.HasError, "", f.EmailError)
          }
        </div>
        <div class="mb-6">
          <label for="password" class="block text-gray-700 text-sm font-bold mb-2">Password</label>
          <input type="password" name="password" class="shadow appearance-none border border-red rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
          if f.PasswordError != "" {
            @components.FormMessage(f.HasError, "", f.PasswordError)
          }
        </div>
        <div class="flex flex-col items-center justify-center">
          <button 
            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" 
            type="button"
            hx-post="/sign-up"
            hx-swap="outerHTML"
            hx-target="body"
            hx-ext="loading-states"
            data-loading-disable
            data-loading-class="bg-gray-500 hover:bg-gray-700 cursor-not-allowed" 
          >
            @components.ButtonLoading("Sign Up")
          </button>
          if f.Error != "" {
            @components.FormMessage(f.HasError, "center", f.Error)
          }
          if f.Message!= "" {
            @components.FormMessage(f.HasError, "center", f.Message)
          }
        </div>
      </form>
    </div>
  }
}